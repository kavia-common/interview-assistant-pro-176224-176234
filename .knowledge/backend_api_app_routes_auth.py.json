{"is_source_file": true, "format": "Python", "description": "This Python source file defines authentication endpoints for a Flask-based web service. It includes routes for user registration and login, using Marshmallow schemas for request validation, and functions for handling JWT tokens and password hashing.", "external_files": ["flask_smorest", "flask.views", "marshmallow", "../db", "../auth"], "external_methods": ["query_one", "execute", "create_password_hash", "verify_password", "create_jwt_token"], "published": [], "classes": [{"name": "RegisterSchema", "description": "Schema for user registration request, requiring email and password."}, {"name": "LoginSchema", "description": "Schema for login request, requiring email and password."}, {"name": "TokenSchema", "description": "Schema for JWT token response."}, {"name": "Register", "description": "Flask MethodView handling user registration via POST request at /register."}, {"name": "Login", "description": "Flask MethodView handling user login via POST request at /login."}], "methods": [{"name": "post(self, args)", "description": "Handles POST request for registering a new user; creates a user and returns a JWT token.", "scope": "Register", "scopeKind": "class"}, {"name": "post", "description": "Handles POST request for user login; verifies credentials and returns a JWT token."}], "calls": ["query_one", "execute", "create_password_hash", "verify_password", "create_jwt_token"], "search-terms": ["auth.py", "registration", "login", "JWT", "password hashing", "Flask MethodView", "flask_smorest"], "state": 2, "file_id": 11, "knowledge_revision": 63, "git_revision": "111a4eeaac88186c69fdd36c04df0cb777f8c450", "revision_history": [{"24": ""}, {"40": "111a4eeaac88186c69fdd36c04df0cb777f8c450"}, {"63": "111a4eeaac88186c69fdd36c04df0cb777f8c450"}], "ctags": [{"_type": "tag", "name": "Login", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^class Login(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LoginSchema", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^class LoginSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Register", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^class Register(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RegisterSchema", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^class RegisterSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenSchema", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^class TokenSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^blp = Blueprint(\"Auth\", \"auth\", url_prefix=\"\\/auth\", description=\"Authentication endpoints\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True, description=\"User email\")$/", "language": "Python", "kind": "variable", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True, description=\"User email\")$/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^    password = fields.String(required=True, load_only=True, description=\"Password\")$/", "language": "Python", "kind": "variable", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^    password = fields.String(required=True, load_only=True, description=\"Password\")$/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^    def post(self, args):$/", "language": "Python", "kind": "member", "signature": "(self, args)", "scope": "Login", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^    def post(self, args):$/", "language": "Python", "kind": "member", "signature": "(self, args)", "scope": "Register", "scopeKind": "class"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/interview-assistant-pro-176224-176234/backend_api/app/routes/auth.py", "pattern": "/^    token = fields.String(required=True, description=\"JWT token\")$/", "language": "Python", "kind": "variable", "scope": "TokenSchema", "scopeKind": "class"}], "hash": "3d4a764db9922a914229bc77c62f136f", "format-version": 4, "code-base-name": "backend_api", "filename": "backend_api/app/routes/auth.py", "fields": [{"name": "blp = Blueprint(\"Auth\", \"auth\", url_prefix=\"\\/auth\", description=\"Authentication endpoints\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "email = fields.Email(required=True, description=\"User email\")", "scope": "LoginSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "password = fields.String(required=True, load_only=True, description=\"Password\")", "scope": "LoginSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "token = fields.String(required=True, description=\"JWT token\")", "scope": "TokenSchema", "scopeKind": "class", "description": "unavailable"}]}